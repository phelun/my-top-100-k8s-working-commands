1. docker run -d -p 8080:8080 phelun/myapp_chpt2:latest
2. kubectl run kubia --image=luksa/kubia --port=8080 --generator=run/v1 # one-liner pod spinner 
3. sudo yum install centos-release-scl -y ; sudo yum install rh-python36 -y ; sudo scl enable rh-python36 bash ; sudo yum groupinstall 'Development Tools' -y
4. alias k=kubectl
5. export KUBE_EDITOR="/usr/bin/nano"
6. kubectl delete rc kubia --cascade=false -- deletes rc but retains pods unmanaged though 
7. kubectl scale job multi-completion-batch-job --replicas 3 -- change a Jobâ€™s parallelism property while the Job is running
8. kubectl exec kubia-878lb -- curl -s http://10.104.228.134 # Connect to internal pod using service static IP 
9. alias kcd='kubectl config set-context $(kubectl config current-context) --namespace '
10. kubectl exec kubia-drb7t env  # List pod environemt variable 
11. kubectl exec -it kubia-drb7t bash # Just like your docker bash interactive, gets u onto the container in a pod
12. kubectl get nodes -o jsonpath='{.items[*].status.addresses[?(@.type=="ExternalIP")].address}' # listing out nodes external IP one-liner  https://kubernetes.io/docs/reference/kubectl/jsonpath/
13. k get pods --all-namespaces -o wide # list of pods all namespaces
14. kcd kube-system ; k exec kube-dns-86f4d74b45-cjbz6 env # see env varables for the dns server in the cluster 
15. kubectl create secret tls tls-secret --cert=tls.cert --key=tls.key
16. kubectl exec kubia-2r1qb -- touch /var/ready # simple touch command on a running container in a pod 
17. kubectl run dnsutils --image=tutum/dnsutils --generator=run-pod/v1 --command -- sleep infinity
18. kubectl port-forward fortune 8080:80 # not sure how this woorks yet :) 
19. kubectl -n kube-system logs tiller-deploy-5cf8586c77-gkkcw --follow # Trail tiller if troubleshooting
20. alias kcontext='kubectl config get-contexts ' # List contexts 
21. alias kswitch='kubectl config use-context '   # switch context 
22. kubectl config unset contexts.fmbah # Delete/unset contexts --> fmbah = contexts name
23. docker login
24. docker build -t helm-hello-world .
25. docker tag latest phelun/helm-hello-world
26. docker push phelun/helm-hello-world:latest 
27. helm del --purge vault-consul-dev00 --tls
28. kubectl rolling-update kubia-v1 kubia-v2 --image=luksa/kubia:v2 # Rolling update oneliner: replaces RC -- issue: kubectl vs master
29. while true; do curl http://aa71f30009fc111; sleep 2; done # Loop through curl 
30. k get po --v 6 # Verbosely run kubectl commands, let you see the requests kubectl is sending to the API server.
31. k delete rc --all 
32. kubectl rollout status deployment kubia
33. kubectl patch deployment kubia -p '{"spec": {"minReadySeconds": 10}}' #SlowDown RollingUpdate strategy: Patches the spec block of a dep
